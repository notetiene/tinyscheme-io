.\" groff -man -Tascii ioscheme.1 | less
.TH ioscheme 1 
.SH "NAME"
ioscheme \- an input event driven scheme interpreter
.SH "SYNOPSIS"
.B ioscheme
.RB [  -dtuv  ]
.RB [  -c  \fIDIR\fR  ]
.RB [  -e  \fIFUNCTION\fR  ]
.RB [  -p  \fIPORT\fR  ]
.RB [  -r  \fIDIR\fR  ]
.RI [  FILES...  ]
.PP
.B ioscheme
.RB [ -h ]
.SH "OPTIONS"
.IP -v
Verbose mode.
.IP -d
Run in the background.
.IP -u
Listen on a UDP socket. 
.IP -t
Listen on a plain TCP socket. 
.IP -h
Show usage information.
.IP -p
.I
PORT
to listen on.
.IP -e
.I
FUNCTION
scheme entry point. The name of a scheme function 
that will be called when data is received.
The data is passed to the function as the single argument.
In the case of the HTTP server mode, 
five arguments will be passed in this order:
HTTP method, path, content, parameters, headers.
The scheme function must return a list,
with the first item a cons pair of HTTP
status code (car) and http status phrase (cdr),
followed by either, pairs representing 
HTTP header name and value pairs,
or a string, the actual content.
.IP -r
.I
DIRECTORY
to be used as the document root. URI paths that match 
a local regular file under this directory
are transmitted by the HTTP response.
.IP -c
.I
DIRECTORY
Change to the directory before listening for connections.
Useful if started by init.
.SH DESCRIPTION
ioscheme listens on a port (udp or tcp) and evaluates a 
scheme function when data is received.
.PP
With neither -u or -t specified, ioscheme functions
as a basic HTTP server.
.SH EXAMPLE
.PP
To run ioscheme:
.IP
ioscheme -v -p 8000 -e receive init.scm test.scm
.PP
The scheme entry point function should look something like:
.IP
(define (receive method path body parameters headers)
  (list 
    (cons 200 "OK") 
    (cons "Content-Type" "text/html") 
    "Hello, World!"))
.SH "AUTHORS"
Tinyscheme was written by Atsushi Moriwaki, Akira KIDA, R.C. Secrist, D. Souflis.
Ioscheme by A. Carl Douglas (carl.douglas@gmail.com).
